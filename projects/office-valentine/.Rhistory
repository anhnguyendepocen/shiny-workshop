getwd()
install.packages("tidyverse")
library(tidyverse)
library(ANTsR)
?file.copy
library(readr)
install.packages("keras")
source('~/Desktop/simpson_keras_2.R')
install.packages(c("jpeg","png")
)
library(jpeg)
img <- readJPEG("~/Desktop/homer.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
?flow_images_from_directory
library(tensorflow)
library.dynam.unload(tensorflow)
?use_backend
source('~/Desktop/simpson_keras_2.R')
epochs <- 5
source('~/Desktop/simpson_keras_2.R')
source('~/Desktop/simpson_keras_2.R')
source('~/Desktop/simpson_keras_2.R')
install.packages("kerasR")
source('~/Desktop/simpson_keras_2.R')
library(kerasR)
plot_model(model, to_file="~/Desktop/model.png")
source('~/Desktop/simpson_keras_2.R')
library(kerasR)
plot_model(model, to_file="~/Desktop/model.png")
remove.packages("kerasR")
library(kerasR)
source('~/Desktop/simpson_keras_2.R')
library(keras)
?image_data_generator
?flow_images_from_directory
?keras_model_sequential
?layer_conv_2d
?layer_max_pooling_2d
?compile
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
View(df_out)
View(df_out)
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
library(keras)
load_model_hdf5("~/SOMRC/workshops/the-simpsons-characters-dataset/simpsons_checkpoints.h5")
model <- load_model_hdf5("~/SOMRC/workshops/the-simpsons-characters-dataset/simpsons_checkpoints.h5")
library(jpeg)
img <- readJPEG("~/Desktop/homer.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/homer.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/nedflanders-halloween.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/nedflanders-halloween.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/939_BartSimpson.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/lego_bart.jpeg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/bart_pin.jpeg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/bart_pin.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/nedflanders-halloween.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/homer.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
View(pred)
img <- readJPEG("~/Desktop/nedflanders-halloween.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/939_BartSimpson.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
View(pred)
img <- readJPEG("~/Desktop/lego_bart.jpeg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/bart_pin.jpg")
img <- image_array_resize(img, 64, 64, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
img <- readJPEG("~/Desktop/homer.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
library(jpeg)
img <- readJPEG("~/Desktop/homer.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
View(pred)
img <- readJPEG("~/Desktop/nedflanders-halloween.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/939_BartSimpson.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/lego_bart.jpeg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
img <- readJPEG("~/Desktop/bart_pin.jpg")
img <- image_array_resize(img, img_width, img_height, data_format = "channels_last")
img <- array(img, dim=c(1, 64, 64, 3))
pred <- model$predict(img, batch_size = as.integer(1))
?flow_images_from_data
library(keras)
?flow_images_from_data
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
source('~/SOMRC/workshops/ML_Hackathon/simpsons_cnn_model.R')
View(df_out)
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
View(pred)
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
source('~/Desktop/simpson_cnn/simpsons_prediction.R')
install.packages("RDCOMClient", repos="http://www.omegahat.net/R")
source('~/.active-rstudio-document')
plot(img)
View(my_valentine)
title(my_valentine$text_w_direction)
plot(img, axes = F)
title(my_valentine$text_w_direction)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(stringr)
str_count(my_valentine$text)
str_count(my_valentine$text, '\\w+')
source('~/.active-rstudio-document')
View(love_data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(love_data)
source('~/.active-rstudio-document')
View(love_data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/shiny-valentine/office-valentine-gen.R')
# Select random row from love_data
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
# Select random row from love_data
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
# Select random row from love_data
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
# Select random row from love_data
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
# Select random row from love_data
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
# Select random row from love_data
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
source('~/shiny-valentine/office-valentine-gen.R')
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
my_valentine <- love_data[sample(1:nrow(love_data),1),]
# Load character image for valentine
img <- load.image(paste0("www/", my_valentine$character, ".jpg"))
# Display the valentine
plot(img, axes = F)
title(my_valentine$text)
library(shiny)
?imageOutput
runApp('office-valentine-app.R')
runApp()
runApp()
runApp()
runApp()
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/shiny-valentine")
runApp()
runApp()
runApp()
runApp()
my_valentine <- data_frame()
my_valentine$text[1] <- "Happy Valentine's Day!"
runApp()
runApp()
runApp()
runApp()
?renderPlot
runApp()
runApp()
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?reactive
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?reactiveValues
runApp()
runApp("app.R")
runApp()
runApp()
runApp('~/shiny-start-finish/Projects/Demos/Prettifying/pythagorean-1.R')
runApp('~/shiny-start-finish/Projects/Demos/Prettifying/pythagorean-1.R')
runApp('~/shiny-start-finish/Projects/Demos/Prettifying/pythagorean-2.R')
runApp('~/shiny-start-finish/Projects/Project-0')
runApp('office-valentine')
source('~/shiny-workshop/0-basic-app/r-muggle-world.R')
diamonds
runApp('~/shiny-start-finish/Projects/Project-0')
runApp('~/shiny-workshop/0-basic-app')
?source
runApp('~/shiny-workshop/0-basic-app')
runApp('~/shiny-workshop/0-basic-app')
reactive_logic <- function(input, output, session) {
source("reactive_logic.R", local = TRUE)
}
renderText("hello")
h <- renderText("hello")
h
h()
runApp()
runApp()
runApp()
install.packages("rsconnect")
rsconnect::setAccountInfo(name='cagancayco', token='18AA30F99D77D490D47797A1A8C421C2', secret='Z3l6OmcCVT6RrE4wWYHubqoHtk2M1T/Xm38Icxeu')
